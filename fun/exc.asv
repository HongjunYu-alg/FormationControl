function [is,tm,robot]=exc(t,robot)
tm=min(robot.sys);
is=1;
ctlst={[-4,-2,-1,-0.5,-0.1,0,0.1,0.5,1,2,4],...
    [-120,-90,-45,-10,-1,0,1,10,45,90,120]*pi/180};
row=[1:5,7:11];
col=[1:5,7:11];
if t>=tm
    is=0;
    for w=find(robot.sys==tm)
        pth=robot.pth{w};
        pt=robot.loc(w,:);
        dir=robot.stat(w,3:4);
        % [wh,robot.ds(w),cp,dtn]=point2pth(pth,pt,dir);
        % [~,~,cp,dtn]=point2pth(pth,pt,dir);
        [~,cp,dtn]=pt2pth(pth,pt,robot.ip(w));
        % ww=[];
        % for k=[1:w-1,w+1:size(robot.loc,1)]
        %     if norm(robot.loc(w,:)-robot.loc(k,:))<5
        %         ww(end+1)=k;
        %     end
        % end
        % if ~isempty(ww)
        %     robot.ms{w}=[];
        %     for ks=1:length(ctlst{1})
        %         for kr=1:length(ctlst{2})
        %             robot.stat(w,1:2)=[ctlst{1}(ks),ctlst{2}(kr)];
        %             robot.ms{w}(1:length(ww),ks,kr)=getmds(robot,w,ww);
        %             robot.ms{w}(1:length(ww),ks,kr)=getctm(robot,w,ww);
        %         end
        %     end
        % end
        clear d;
        if w==5
            for ks=1:length(ctlst{1})
                for kr=1:length(ctlst{2})
                    [locc,hea]=moverb(robot.loc(w,:),ctlst{1}(ks),...
                        robot.stat(w,3:4),ctlst{2}(kr),0.01);
                    [~,cp,~]=pt2pth(pth,locc,robot.ip(w));
                    % [~,~,cp,~]=point2pth(pth,locc,hea);
                    [wh1,~,pt1,~]=pt2pth(pth,robot.loc(robot.ld,:),[1,0],robot.ip(w));
                    [wh2,~,pt2,~]=pt2pth(pth,locc,[1,0],robot.ip(w));
                    % [wh1,~,pt1]=point2pth(pth,robot.loc(robot.ld,:),[1,0]);
                    % [wh2,~,pt2]=point2pth(pth,locc,[1,0]);
                    d(ks,kr)=abs(dsbypth(pt1,robot.ip(w),pt2,wh2,pth)-robot.fmt(w))*0.8+0.2*norm(cp-locc);
                end
            end
            [v,one]=min(d(row,col));
            [~,two]=min(v);
            one=one(two);
            if w==5
                d(row(one),col(two))
            end
            robot.stat(w,1:2)=[ctlst{1}(row(one)),ctlst{2}(col(two))];
        elseif w==robot.ld
            for ks=1:length(ctlst{1})
                for kr=1:length(ctlst{2})
                    locc=moverb(robot.loc(w,:),ctlst{1}(ks),...
                        robot.stat(w,3:4),ctlst{2}(kr),0.01);
                    d(ks,kr)=norm(0.2*cp+0.8*dtn-locc)/(abs(ctlst{1}(ks))+10^-10);
                end
            end
            [v,one]=min(d(row,col));
            [~,two]=min(v);
            one=one(two);
            robot.stat(w,1:2)=[ctlst{1}(row(one)),ctlst{2}(col(two))];
        else
            robot.stat(w,1:2)=0;
        end
        robot.sys(w)=robot.sys(w)+0.1;
        % rat=exp(-robot.er(w)/5);
        % if rat<1
        %     robot.sys(w)=robot.sys(w)...
        %         +0.1*(rat*(rat>0.01)+0.01*(rat<=0.01));
        % elseif rat>3
        %     rat=3;
        %     robot.sys(w)=robot.sys(w)+0.1;
        % else
        %     robot.sys(w)=robot.sys(w)+0.1;
        % end
        % robot.stat(w,1:2)=robot.stat(w,1:2).*[rat,1];
        % if 0
        %     if wh==size(pth,1)&&norm(robot.loc(w,:)-pth(end,3:4))<0.2
        %         % robots have reached destinations
        %         robot.stat(w,1:2)=0;
        %         robot.sys(w)=robot.sys(w)+0.1;
        %     else
        %         % drive robots to destinations
        %         robot.stat(w,1:2)=smpcontr(dir,...
        %             robot.loc(w,:),pth(wh,3:4)+pth(wh,5:6)...
        %             +4*(cp-robot.loc(w,:)));
        %         if w~=1
        %             % follower slows down/speed up along the path
        %             rat=exp(-robot.er(w)/5);
        %             robot.stat(w,1:2)=robot.stat(w,1:2).*[rat,1];
        %             if rat<1
        %                 robot.sys(w)=robot.sys(w)...
        %                     +0.1*(rat*(rat>0.01)+0.01*(rat<=0.01));
        %             else
        %                 robot.sys(w)=robot.sys(w)+0.1;
        %             end
        %         else
        %             % leader moves along the path undisturbed
        %             robot.sys(w)=robot.sys(w)+0.1;
        %         end
        %     end
        % end
    end
else
    tm=t;
end